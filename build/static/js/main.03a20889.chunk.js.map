{"version":3,"sources":["config/index.ts","services/api.ts","context/auth.tsx","context/product.tsx","context/order.tsx","context/dialog.tsx","utils/validationErrors.ts","utils/flash.ts","pages/login/index.tsx","pages/productsList/components/goToCartButton.tsx","pages/productsList/components/clearCardDialog.tsx","pages/productsList/components/cardTotal.tsx","components/logoutDialog.tsx","components/logoutButton.tsx","components/quantityRow.tsx","pages/productsList/components/productsGrid.tsx","pages/productsList/index.tsx","pages/cart/components/payNowDialog.tsx","components/finishDialog.tsx","pages/cart/components/paymentButtons.tsx","pages/cart/components/orderTableMoreDialog.tsx","utils/useWindowWidth.ts","pages/cart/components/orderTable.tsx","pages/cart/index.tsx","routes/Route.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["appName","flashMessageStorageId","api","axios","create","baseURL","loginRequest","credentials","a","post","email","password","response","data","token","get","headers","Authorization","payRequest","order","value","items","Object","values","AuthContext","createContext","AuthProvider","children","useState","user","localStorage","getItem","JSON","parse","setData","login","useCallback","setItem","stringify","logout","entries","map","item","filter","startsWith","removeItem","window","location","href","Provider","ProductContext","ProductProvider","products","setProducts","getProduct","productId","find","product","_id","OrderContext","OrderProvider","useContext","orderFromStorage","setOrder","useEffect","getQuantityRow","orderItem","quantity","increaseQuantity","total","price","Error","decreaseQuantity","clear","hasProduct","Boolean","getTotal","reduce","accumulator","currentValue","dialogs","clearCard","payNow","finish","orderTableMore","DialogContext","DialogProvider","isOpen","setIsOpen","open","dialogId","close","getValidationErrors","err","validationErrors","inner","forEach","error","path","message","flash","messageObj","useStyles","makeStyles","card","position","top","left","transform","width","cardContent","padding","paddingBottom","Login","setEmail","setPassword","setValidationErrors","classes","schema","Yup","shape","required","validate","abortEarly","toast","flashMessageObj","level","type","Container","Typography","variant","component","align","className","CardContent","Box","TextField","label","onChange","e","target","fullWidth","FormHelperText","mt","textAlign","Button","color","onClick","handleLogin","GoToCartButton","disabled","size","Hidden","xsDown","ml","ClearCardDialog","Dialog","onClose","aria-labelledby","DialogTitle","DialogActions","mx","paper","boxSizing","bottom","backgroundColor","CardTotal","Paper","square","display","alignItems","justifyContent","flexWrap","style","marginRight","to","LogoutDialog","LogoutButton","QuantityRow","IconButton","aria-label","fontSize","ProductsGrid","marginBottom","Grid","container","spacing","key","xs","sm","md","elevation","p","noWrap","name","my","ProductsList","getProducts","then","res","catch","status","mb","length","Alert","severity","PayNowDialog","setValue","handlePay","min","id","DialogContent","DialogContentText","margin","InputProps","inputProps","setValueHandler","parseInt","autoFocus","FinishDialog","count","setCount","handleFinish","countRef","useRef","current","onEntered","interval","setInterval","clearInterval","startCountDown","PaymentButtons","OrderTableMoreDialog","paddingTop","getWindowWidth","innerWidth","OrderTable","selectedItem","setSelectedItem","isMobile","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","Card","mr","Route","isPrivate","Component","rest","render","pathname","state","from","Routes","exact","Cart","configure","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","App","StylesProvider","injectFirst","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03a20889.chunk.js","sourcesContent":["export const appName = 'pindureta';\n// export const apiBaseURL = 'http://localhost:3000';\nexport const apiBaseURL = 'https://pindureta-api.guizo.dev.br'; // prod\nexport const flashMessageStorageId = `@${appName}:flashMessage`;","import axios from 'axios';\nimport Product from '../interfaces/product';\nimport LoginCredentials from '../interfaces/loginCredentials';\nimport { apiBaseURL } from '../config';\nimport Order from '../interfaces/order';\n\ninterface LoginResponse {\n  user: object;\n  token: string;\n}\n\nconst api = axios.create({\n  baseURL: apiBaseURL,\n});\n\nexport async function loginRequest(credentials: LoginCredentials): Promise<LoginResponse> {\n  const response = await api.post<LoginResponse>('/auth/login', {\n    email: credentials.email,\n    password: credentials.password,\n  });\n\n  return response.data;\n};\n\nexport async function getProducts(token: string): Promise<Product[]> {\n  const response = await api.get(\n    '/products',\n    {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }\n  );\n\n  return response.data;\n}\n\nexport async function payRequest(\n  token: string,\n  order: Order,\n  value?: number,\n): Promise<void> {\n  await api.post(\n    '/orders',\n    {\n      items: Object.values(order),\n      value,\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    }\n  );\n}","\nimport React, { createContext, useCallback, useState } from 'react';\nimport { loginRequest } from '../services/api';\nimport LoginCredentials from '../interfaces/loginCredentials';\nimport { appName, flashMessageStorageId } from '../config';\n\ninterface AuthData {\n  user: object;\n  token: string;\n}\n\ninterface AuthContextData {\n  data: AuthData,\n  login(credentials: LoginCredentials): Promise<void>,\n  logout(): void;\n}\n\nexport const AuthContext = createContext<AuthContextData>(\n  {} as AuthContextData\n);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthData>(() => {\n    const user = localStorage.getItem(`@${appName}:user`);\n    const token = localStorage.getItem(`@${appName}:userToken`);\n\n    if (user && token) {\n      return {\n        user: JSON.parse(user),\n        token,\n      }\n    }\n\n    return {} as AuthData;\n  });\n\n  const login = useCallback(async (credentials: LoginCredentials) => {\n    const { user, token } = await loginRequest(credentials);\n\n    localStorage.setItem(`@${appName}:user`, JSON.stringify(user));\n    localStorage.setItem(`@${appName}:userToken`, token);\n\n    setData({\n      user,\n      token,\n    });\n  }, []);\n\n  const logout = useCallback((): void => {\n    Object.entries(localStorage)\n      .map(item => item[0])\n      .filter(item => item.startsWith(`@${appName}:`) && item !== flashMessageStorageId)\n      .map(item => localStorage.removeItem(item));\n\n    window.location.href = '/login';\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{\n      data,\n      login,\n      logout,\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};","\nimport React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useState\n} from 'react';\nimport Product from '../interfaces/product';\n\ninterface ProductContextData {\n  products: Product[];\n  setProducts: Dispatch<SetStateAction<Product[]>>\n  getProduct(productId: string): (Product | undefined);\n}\n\nexport const ProductContext = createContext<ProductContextData>({} as ProductContextData);\n\nexport const ProductProvider: React.FC = ({ children }) => {\n  const [products, setProducts] = useState<Product[]>([]);\n\n  const getProduct = useCallback((productId: string): (Product | undefined) => {\n    return products.find(product => product._id === productId);\n  }, [products]);\n\n  return (\n    <ProductContext.Provider value={{ products, setProducts, getProduct }}>\n      {children}\n    </ProductContext.Provider>\n  );\n};","\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState\n} from 'react';\nimport { appName } from '../config';\nimport Order from '../interfaces/order';\nimport { ProductContext } from './product';\n\ninterface OrderContextData {\n  getQuantityRow(productId: string): number;\n  increaseQuantity(productId: string): void;\n  decreaseQuantity(productId: string): void;\n  removeItem(productId: string): void;\n  getTotal(): number;\n  clear(): void;\n  hasProduct(productId: string): boolean;\n  order: Order;\n}\n\nexport const OrderContext = createContext<OrderContextData>({} as OrderContextData);\n\nexport const OrderProvider: React.FC = ({ children }) => {\n  const { getProduct } = useContext(ProductContext);\n\n  const [order, setOrder] = useState<Order>(() => {\n    const orderFromStorage = localStorage.getItem(`@${appName}:order`);\n\n    if (orderFromStorage) {\n      return JSON.parse(orderFromStorage);\n    }\n\n    return {} as Order;\n  });\n\n  useEffect((): void => {\n    localStorage.setItem(`@${appName}:order`, JSON.stringify(order));\n  }, [order]);\n\n  const getQuantityRow = useCallback((productId: string): number => {\n    const orderItem = order[productId];\n\n    if (orderItem) {\n      return orderItem.quantity;\n    }\n\n    return 0;\n  }, [order]);\n\n  const removeItem = useCallback((productId: string): void => {\n    delete order[productId];\n    \n    setOrder({ ...order });\n  }, [order]);\n\n  const increaseQuantity = useCallback((productId: string): void => {\n    const orderItem = order[productId];\n\n    if (orderItem) {\n      setOrder({\n        ...order,\n        [productId]: {\n          ...orderItem,\n          quantity: orderItem.quantity + 1,\n          total: orderItem.total + orderItem.price,\n        }\n      });\n    } else {\n      const product = getProduct(productId);\n\n      if (!product) {\n        throw Error('Invalid product id');\n      }\n\n      setOrder({\n        ...order,\n        [productId]: {\n          ...product,\n          quantity: 1,\n          total: product.price,\n        }\n      });\n    }\n  }, [order, getProduct]);\n\n  const decreaseQuantity = useCallback((productId: string): void => {\n    const orderItem = order[productId];\n\n    if (orderItem) {\n      if (orderItem.quantity > 1) {\n        setOrder({\n          ...order,\n          [productId]: {\n            ...orderItem,\n            quantity: orderItem.quantity - 1,\n            total: orderItem.total - orderItem.price,\n          }\n        });\n      } else {\n        removeItem(productId);\n      }\n    }\n  }, [order, removeItem]);\n\n  const clear = useCallback((): void => {\n    setOrder({});\n\n    localStorage.removeItem(`@${appName}:order`);\n  }, []);\n\n  const hasProduct = useCallback((productId: string): boolean => {\n    return Boolean(order[productId]);\n  }, [order]);\n\n  const getTotal = useCallback((): number => {\n    return Object.values(order).reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.total;\n    }, 0);\n  }, [order]);\n\n  return (\n    <OrderContext.Provider value={{\n      getQuantityRow,\n      increaseQuantity,\n      decreaseQuantity,\n      removeItem,\n      getTotal,\n      clear,\n      hasProduct,\n      order,\n    }}>\n      {children}\n    </OrderContext.Provider>\n  );\n};","\nimport React, { createContext, useCallback, useState } from 'react';\n\ninterface DialogContextData {\n  isOpen: DialogState;\n  open(dialogId: string): void;\n  close(dialogId: string): void;\n}\n\ninterface DialogState {\n  [id: string]: boolean;\n}\n\nconst dialogs: DialogState = {\n  clearCard: false,\n  payNow: false,\n  finish: false,\n  logout: false,\n  orderTableMore: false,\n}\n\nexport const DialogContext = createContext<DialogContextData>({} as DialogContextData);\n\nexport const DialogProvider: React.FC = ({ children }) => {\n  const [isOpen, setIsOpen] = useState<DialogState>(dialogs);\n\n  const open = useCallback((dialogId: string): void => {\n    setIsOpen({\n      ...isOpen,\n      [dialogId]: true,\n    })\n  }, [isOpen]);\n\n  const close = useCallback((dialogId: string): void => {\n    setIsOpen({\n      ...isOpen,\n      [dialogId]: false,\n    })\n  }, [isOpen]);\n\n  return (\n    <DialogContext.Provider value={{ isOpen, open, close }}>\n      {children}\n    </DialogContext.Provider>\n  );\n};","import { ValidationError } from 'yup';\n\nexport interface ValidationErrors {\n  [key: string]: any;\n}\n\nexport function getValidationErrors(err: ValidationError): ValidationErrors {\n  const validationErrors: ValidationErrors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}","import { flashMessageStorageId } from '../config';\n\ntype FlashMessageObj = {\n  level: 'info' | 'warning' | 'error';\n  message: string;\n}\n\nexport function flash(\n  messageObj: FlashMessageObj,\n): void {\n  localStorage.setItem(flashMessageStorageId, JSON.stringify(messageObj));\n}\n\nexport function clearFlash() {\n  localStorage.removeItem(flashMessageStorageId);\n}\n\nexport function getFlash() {\n  return localStorage.getItem(flashMessageStorageId);\n}","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  Typography,\n  FormHelperText,\n  Container,\n  makeStyles,\n} from '@material-ui/core';\nimport * as Yup from 'yup';\nimport { ValidationErrors, getValidationErrors } from '../../utils/validationErrors';\nimport { AuthContext } from '../../context/auth'; \nimport LoginCredentials from '../../interfaces/loginCredentials';\nimport { toast } from 'react-toastify';\nimport { getFlash, clearFlash } from '../../utils/flash';\n\ninterface FormInputs extends LoginCredentials, ValidationErrors {};\n\nconst useStyles = makeStyles({\n  card: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '300px',\n  },\n  cardContent: {\n    padding: '1.5rem',\n  },\n  '@media (max-width: 480px)': {\n    card: {\n      width: 'calc(100% - 8px)',\n    },\n    cardContent: {\n      padding: '1rem',\n      '&:last-child': {\n        paddingBottom: '1rem',\n      }\n    },\n  }\n});\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [validationErrors, setValidationErrors] = useState<FormInputs | null>(null);\n  const classes = useStyles();\n  const { login } = useContext(AuthContext);\n  \n  useEffect(() => {\n    const flashMessageObj = getFlash();\n\n    if (flashMessageObj) {\n      const { level, message } = JSON.parse(flashMessageObj);\n\n      toast(message, {\n        type: level,\n      });\n\n      clearFlash();\n    }\n  }, []);\n\n  async function handleLogin(): Promise<void> {\n    try {\n      const schema = Yup.object().shape({\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      });\n\n      await schema.validate({\n        email,\n        password,\n      }, {\n        abortEarly: false,\n      });\n\n      await login({\n        email,\n        password,\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const validationErrors = getValidationErrors(err);\n        \n        setValidationErrors(validationErrors as FormInputs);\n      }\n      \n      toast.error('Login failed');\n    }\n  }\n\n  function setEmailHandler(value: string) {\n    if (validationErrors?.email) {\n     setValidationErrors({ ...validationErrors, email: '' }); \n    }\n\n    setEmail(value);\n  }\n\n  function setPasswordHandler(value: string) {\n    if (validationErrors?.password) {\n     setValidationErrors({ ...validationErrors, password: '' }); \n    }\n\n    setPassword(value);\n  }\n\n  return (\n    <Container>\n      <Typography variant=\"h5\" component=\"h5\" align=\"center\">\n        Pindureta\n      </Typography>\n      <Card className={classes.card} variant=\"outlined\">\n        <CardContent className={classes.cardContent}>\n          <Box>\n            <TextField\n              label=\"E-mail\"\n              type=\"email\"\n              variant=\"outlined\"\n              value={email}\n              onChange={e => setEmailHandler(e.target.value)}\n              error={Boolean(validationErrors?.email)}\n              fullWidth\n            />\n            {validationErrors?.email && (\n              <FormHelperText error={true}>\n                {validationErrors.email}\n              </FormHelperText>\n            )}\n          </Box>\n          <Box mt={2}>\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              variant=\"outlined\"\n              value={password}\n              onChange={e => setPasswordHandler(e.target.value)}\n              error={Boolean(validationErrors?.password)}\n              fullWidth\n            />\n            {validationErrors?.password && (\n              <FormHelperText error={true}>\n                {validationErrors.password}\n              </FormHelperText>\n            )}\n          </Box>\n          <Box mt={2} textAlign=\"center\">\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => handleLogin()}\n            >\n              Login\n            </Button>\n          </Box>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport { Button, Box, Hidden } from '@material-ui/core';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\ninterface GoToCartButtonData {\n  disabled?: boolean;\n}\n\nconst GoToCartButton: React.FC<GoToCartButtonData> = ({ disabled }) => {\n  return (\n    <Button\n      type=\"button\"\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"large\"\n      disabled={disabled}\n    >\n      <ShoppingCartIcon />\n      <Hidden xsDown>\n        <Box ml={0.5}>\n          Go to Cart\n        </Box>\n      </Hidden>\n    </Button>\n  );\n};\n\nexport default GoToCartButton;","import React, { useContext } from 'react';\nimport {\n  Dialog,\n  DialogActions,\n  Button,\n  DialogTitle,\n  Box,\n} from '@material-ui/core';\nimport { DialogContext } from '../../../context/dialog';\nimport { OrderContext } from '../../../context/order';\n\nconst ClearCardDialog: React.FC = () => {\n  const dialogId = 'clearCard';\n  const { clear } = useContext(OrderContext);\n  const { close, isOpen } = useContext(DialogContext);\n\n  const handleConfirm = () => {\n    clear();\n\n    close(dialogId);\n  }\n  \n  return (\n    <Dialog\n      open={isOpen[dialogId]}\n      onClose={() => close(dialogId)}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle>\n        Clear cart?\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={() => close(dialogId)} variant=\"contained\" color=\"secondary\">\n          Cancel\n        </Button>\n        <Box mx={1}></Box>\n        <Button onClick={handleConfirm} variant=\"contained\" color=\"primary\">\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ClearCardDialog;","import { Button, Paper, Typography, Box, makeStyles, Hidden } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React, { useContext } from 'react';\nimport { OrderContext } from '../../../context/order';\nimport { Link } from 'react-router-dom';\nimport GoToCartButton from './goToCartButton';\nimport ClearCardDialog from './clearCardDialog';\nimport { DialogContext } from '../../../context/dialog';\n\nconst useStyles = makeStyles({\n  paper: {\n    position: 'fixed',\n    boxSizing: 'border-box',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    backgroundColor: '#bdbdbd',\n    padding: '0.5rem 2rem',\n  },\n  '@media(max-width:480px)': {\n    paper: {\n      padding: '0.5rem',\n    }\n  }\n});\n\nconst CardTotal: React.FC = () => {\n  const { getTotal } = useContext(OrderContext);\n  const { open } = useContext(DialogContext);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Paper className={classes.paper} square>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          flexWrap=\"no-wrap\"\n        >\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            onClick={() => open('clearCard')}\n          >\n            <DeleteIcon />\n            <Hidden xsDown>\n              <Box ml={0.5}>\n                Clear Cart\n              </Box>\n            </Hidden>\n          </Button>\n          <Box>\n            <Typography component=\"span\" style={{ marginRight: '1rem' }}>\n              <Hidden xsDown><b>Total:</b> </Hidden>${getTotal()}\n            </Typography>\n            {getTotal() > 0 ? (\n              <Link to=\"/cart\">\n                <GoToCartButton />\n              </Link>\n            ) : (\n              <GoToCartButton disabled={true} />\n            )}\n          </Box>\n        </Box>\n      </Paper>\n      <ClearCardDialog />\n    </>\n  );\n};\n\nexport default CardTotal;","import React, { useContext } from 'react';\nimport {\n  Dialog,\n  DialogActions,\n  Button,\n  DialogTitle,\n  Box,\n} from '@material-ui/core';\nimport { DialogContext } from '../context/dialog';\nimport { AuthContext } from '../context/auth';\n\nconst LogoutDialog: React.FC = () => {\n  const dialogId = 'logout';\n  const { close, isOpen } = useContext(DialogContext);\n  const { logout } = useContext(AuthContext);\n\n  const handleConfirm = () => {\n    logout();\n\n    close(dialogId);\n  }\n  \n  return (\n    <Dialog\n      open={isOpen[dialogId]}\n      onClose={() => close(dialogId)}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle>\n        Logout?\n      </DialogTitle>\n      <DialogActions>\n        <Button onClick={() => close(dialogId)} variant=\"contained\" color=\"secondary\">\n          Cancel\n        </Button>\n        <Box mx={1}></Box>\n        <Button onClick={handleConfirm} variant=\"contained\" color=\"primary\">\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default LogoutDialog;","import React, { useContext } from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport LogoutDialog from './logoutDialog';\nimport { DialogContext } from '../context/dialog';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst LogoutButton: React.FC = () => {\n  const { open } = useContext(DialogContext);\n\n  return (\n    <>\n      <Button\n        type=\"button\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        onClick={() => open('logout')}\n      >\n        <ExitToAppIcon />\n        <Box ml={0.5}>\n          Logout\n        </Box>\n      </Button>\n      <LogoutDialog />\n    </>\n  );\n};\n\nexport default LogoutButton;","import React, { useContext } from 'react';\nimport PlusIcon from '@material-ui/icons/AddBox';\nimport MinusIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport { Box, IconButton, Typography } from '@material-ui/core';\nimport { OrderContext } from '../context/order';\n\ninterface QuantityRowData {\n  productId: string;\n}\n\nconst QuantityRow: React.FC<QuantityRowData> = ({ productId }) => {\n  const {\n    getQuantityRow,\n    increaseQuantity,\n    decreaseQuantity,\n  } = useContext(OrderContext);\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <IconButton onClick={() => decreaseQuantity(productId)} aria-label=\"decrease quantity\">\n        <MinusIcon fontSize=\"large\" />\n      </IconButton>\n      <Box mx={0.5}>\n        <Typography>\n          {getQuantityRow(productId)}\n        </Typography>\n      </Box>\n      <IconButton onClick={() => increaseQuantity(productId)} aria-label=\"increase quantify\">\n        <PlusIcon fontSize=\"large\" />\n      </IconButton>\n    </Box>\n  );\n}\n\nexport default QuantityRow;","import React, { useContext } from 'react';\nimport { Box, Grid, Paper, Typography } from '@material-ui/core';\nimport QuantityRow from '../../../components/quantityRow';\nimport Product from '../../../interfaces/product';\nimport { OrderContext } from '../../../context/order';\n\ninterface ProductsGridData {\n  products: Product[];\n}\n\nconst ProductsGrid: React.FC<ProductsGridData> = ({ products }) => {\n  const { hasProduct } = useContext(OrderContext);\n\n  return (\n    <Box style={{ marginBottom: '70px' }}>\n      <Grid container spacing={2}>\n        {products && products.map((product, key) => (\n          <Grid item xs={12} sm={6} md={4} key={key}>\n            <Paper\n              elevation={3}\n              style={\n                hasProduct(product._id)\n                ? { backgroundColor: '#90ee90' }\n                : {}\n              }>\n              <Box p={3} textAlign=\"center\">\n                <Typography variant=\"h6\" component=\"h6\" noWrap>\n                  {product.name}\n                </Typography>\n                <Box my={2}>\n                  <Typography>\n                    ${product.price}\n                  </Typography>\n                </Box>\n                <Box>\n                  <QuantityRow productId={product._id} />\n                </Box>\n              </Box>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default ProductsGrid;","import React, { useContext, useEffect } from 'react';\nimport {\n  Typography,\n  Box,\n  Container,\n} from '@material-ui/core';\nimport CardTotal from './components/cardTotal';\nimport { ProductContext } from '../../context/product';\nimport LogoutButton from '../../components/logoutButton';\nimport { Alert } from '@material-ui/lab';\nimport { getProducts } from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { AuthContext } from '../../context/auth';\nimport ProductsGrid from './components/productsGrid';\n\nconst ProductsList: React.FC = () => {\n  const { products, setProducts } = useContext(ProductContext);\n  const { data, logout } = useContext(AuthContext);\n\n  useEffect((): void => {\n    getProducts(data.token)\n      .then(res => {\n        setProducts(res);\n      })\n      .catch(err => {\n        if (err.response.status === 403) {\n          logout();\n        }\n\n        toast.error('Error fetching products list');\n      });\n  }, [setProducts, data.token, logout]);\n\n  return (\n    <Container>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\n        <Typography variant=\"h5\" component=\"h5\">\n          Products\n        </Typography>\n        <LogoutButton />\n      </Box>\n      {products.length > 0 ? (\n        <ProductsGrid products={products} />\n      ) : (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <Alert severity=\"warning\">No products available</Alert>\n        </Box>\n      )}\n      <CardTotal />\n    </Container>\n  );\n};\n\nexport default ProductsList;","import React, { useContext, useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  TextField,\n  Box,\n  FormHelperText,\n  Typography,\n} from '@material-ui/core';\nimport { DialogContext } from '../../../context/dialog';\nimport * as Yup from 'yup';\nimport { ValidationErrors, getValidationErrors } from '../../../utils/validationErrors';\nimport { OrderContext } from '../../../context/order';\nimport { payRequest } from '../../../services/api';\nimport { toast } from 'react-toastify';\nimport { AuthContext } from '../../../context/auth';\nimport { flash } from '../../../utils/flash';\n\ninterface FormInputs extends ValidationErrors {\n  value: string;\n};\n\nconst PayNowDialog: React.FC = () => {\n  const dialogId = 'payNow';\n  const { logout, data } = useContext(AuthContext);\n  const { isOpen, open, close } = useContext(DialogContext);\n  const { order, getTotal } = useContext(OrderContext);\n  const [value, setValue] = useState(getTotal());\n  const [validationErrors, setValidationErrors] = useState<FormInputs | null>(null);\n\n  const handlePay = async () => {\n    try {\n      const schema = Yup.object().shape({\n        value: Yup.number().required().min(0),\n      });\n\n      await schema.validate({\n        value,\n      }, {\n        abortEarly: false,\n      });\n\n      await payRequest(data.token, order, value);\n\n      close(dialogId);\n\n      open('finish');\n    } catch(err) {\n      if (err instanceof Yup.ValidationError) {\n        const validationErrors = getValidationErrors(err);\n        setValidationErrors(validationErrors as FormInputs);\n      }\n\n      if (err.response.status === 403) {\n        flash({\n          level: 'error',\n          message: 'Session expired',\n        });\n\n        logout();\n        \n        return;\n      }\n\n      toast.error('Payment failed');\n    }\n  }\n\n  const setValueHandler = (value: number) => {\n    if (validationErrors?.total) {\n     setValidationErrors({ ...validationErrors, value: '' }); \n    }\n\n    setValue(value);\n  }\n\n  return (\n    <Dialog\n      open={isOpen[dialogId]}\n      onClose={() => close(dialogId)}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Pay Now</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Inform the value you are paying now\n        </DialogContentText>\n        <Box my={1}>\n          <Typography>\n            Total: ${getTotal()}\n          </Typography>\n        </Box>\n        <Box mb={1}>\n          <TextField\n            margin=\"dense\"\n            label=\"Value\"\n            type=\"number\"\n            InputProps={{ inputProps: { min: 0 } }}\n            value={value}\n            onChange={e => setValueHandler(parseInt(e.target.value))}\n            error={Boolean(validationErrors?.total)}\n            autoFocus\n            fullWidth\n          />\n          {validationErrors?.total && (\n            <FormHelperText error={true}>\n              {validationErrors.total}\n            </FormHelperText>\n          )}\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          <Button onClick={() => close(dialogId)} variant=\"contained\" color=\"secondary\">\n            Cancel\n          </Button>\n          <Box mx={1}></Box>\n          <Button onClick={handlePay} variant=\"contained\" color=\"primary\">\n            Pay\n          </Button>\n        </Box>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default PayNowDialog;","import React, { useContext, useRef, useState } from 'react';\nimport {\n  Dialog,\n  DialogActions,\n  Button,\n  Box,\n  DialogContent,\n  Typography,\n} from '@material-ui/core';\nimport { DialogContext } from '../context/dialog';\nimport { AuthContext } from '../context/auth';\nimport { OrderContext } from '../context/order';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst FinishDialog: React.FC = () => {\n  const dialogId = 'finish';\n  const { clear } = useContext(OrderContext);\n  const { isOpen, close } = useContext(DialogContext);\n  const { logout } = useContext(AuthContext);\n  const [count, setCount] = useState<number>(5);\n\n  const handleFinish = () => {\n    logout();\n\n    close(dialogId);\n  };\n\n  const handleContinue = () => {\n    clear();\n\n    window.location.href = '/';\n  }\n\n  const countRef = useRef(count);\n  countRef.current = count;\n\n  const startCountDown = () => {\n    const interval = setInterval(() => {\n      if (countRef.current > 0) {\n        setCount(countRef.current - 1);\n      } else {\n        clearInterval(interval);\n\n        handleFinish();\n      }\n    }, 1000);\n  }\n\n  return (\n    <Dialog\n      onEntered={() => startCountDown()}\n      open={isOpen[dialogId]}\n      onClose={handleFinish}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogContent>\n        <Box mb={2} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <CheckCircleIcon fontSize=\"large\" style={{ color: '#4CAF50' }} />\n          <Typography>Order received</Typography>\n        </Box>\n        <Box my={1}>\n          <Typography>You'll be logged out in {count}s</Typography>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          <Button onClick={handleContinue} variant=\"contained\" color=\"secondary\">\n            Continue\n          </Button>\n          <Box mx={1}></Box>\n          <Button onClick={handleFinish} variant=\"contained\" color=\"primary\">\n            Finish\n          </Button>\n        </Box>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default FinishDialog;","import React, { useContext } from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport PayNowDialog from './payNowDialog';\nimport { DialogContext } from '../../../context/dialog';\nimport FinishDialog from '../../../components/finishDialog';\nimport { OrderContext } from '../../../context/order';\nimport { AuthContext } from '../../../context/auth';\nimport { payRequest } from '../../../services/api';\nimport { toast } from 'react-toastify';\nimport { flash } from '../../../utils/flash';\n\nconst PaymentButtons: React.FC = () => {\n  const { open } = useContext(DialogContext);\n  const { order } = useContext(OrderContext);\n  const { data, logout } = useContext(AuthContext);\n\n  const handlePay = async () => {\n    try {\n      await payRequest(data.token, order);\n\n      open('finish');\n    } catch (err) {\n      if (err.response.status === 403) {\n        flash({\n          level: 'error',\n          message: 'Session expired',\n        });\n\n        logout();\n\n        return;\n      }\n\n      toast.error('Payment failed');\n    }\n  }\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mt={5}>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n          style={{ marginRight:'2rem' }}\n          onClick={() => open('payNow')}\n        >\n          Pay<br></br>Now\n        </Button>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n          onClick={() => handlePay()}\n        >\n          Pay<br></br>Later\n        </Button>\n      </Box>\n      <PayNowDialog />\n      <FinishDialog />\n    </>\n  );\n}\n\nexport default PaymentButtons;","import React, { useContext } from 'react';\nimport {\n  Dialog,\n  DialogActions,\n  Button,\n  DialogContent,\n  Box,\n  Typography,\n} from '@material-ui/core';\nimport { DialogContext } from '../../../context/dialog';\nimport QuantityRow from '../../../components/quantityRow';\nimport { OrderContext } from '../../../context/order';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OrderItem from '../../../interfaces/orderItem';\n\ninterface OrderTableMoreDialogData {\n  product: OrderItem;\n}\n\nconst OrderTableMoreDialog: React.FC<OrderTableMoreDialogData> = ({ product }) => {\n  const dialogId = 'orderTableMore';\n  const { isOpen, close } = useContext(DialogContext);\n  const { removeItem } = useContext(OrderContext);\n\n  const handleRemoveItem = () => {\n    removeItem(product._id);\n\n    close(dialogId);\n  }\n\n  return (\n    <Dialog\n      open={isOpen[dialogId]}\n      onClose={() => close(dialogId)}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogContent style={{paddingTop:'8px'}}>\n        <Box textAlign=\"center\">\n          <Typography>{product.name}</Typography>\n        </Box>\n        <QuantityRow productId={product._id} />\n        <Button\n          onClick={handleRemoveItem}\n          variant=\"contained\"\n          color=\"default\"\n          size=\"small\"\n          fullWidth\n        >\n          <DeleteIcon fontSize=\"large\" />\n          <Box ml={0.5}>\n            Remove\n          </Box>\n        </Button>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => close(dialogId)}\n          variant=\"contained\"\n          color=\"secondary\"\n          fullWidth\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default OrderTableMoreDialog;","import { useState, useEffect } from 'react';\n\ninterface UseWindowWidthData {\n  width: number;\n  isMobile: boolean;\n}\n\nfunction getWindowWidth(): number {\n  const { innerWidth } = window;\n\n  return innerWidth;\n}\n\nexport default function useWindowWidth(): UseWindowWidthData {\n  const [windowWidth, setWindowWidth] = useState<number>(getWindowWidth());\n\n  useEffect(() => {\n    function handleResize(): void {\n      setWindowWidth(getWindowWidth());\n    }\n\n    window.addEventListener('resize', handleResize);\n    \n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return {\n    width: windowWidth,\n    isMobile: windowWidth < 480,\n  };\n}\n","import React, { useContext, useState } from 'react';\nimport {\n  TableContainer,\n  Table,\n  TableRow,\n  TableHead,\n  TableCell,\n  TableBody,\n  Paper,\n  Typography,\n  Box,\n  IconButton,\n} from '@material-ui/core';\nimport { OrderContext } from '../../../context/order';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport QuantityRow from '../../../components/quantityRow';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { DialogContext } from '../../../context/dialog';\nimport OrderTableMoreDialog from './orderTableMoreDialog';\nimport OrderItem from '../../../interfaces/orderItem';\nimport useWindowWidth from '../../../utils/useWindowWidth';\n\nconst OrderTable: React.FC = () => {\n  const { order, removeItem } = useContext(OrderContext);\n  const { open } = useContext(DialogContext);\n  const [selectedItem, setSelectedItem] = useState<OrderItem>({} as OrderItem);\n  const { isMobile } = useWindowWidth();\n\n  const handleOpenOrderTableMoreDialog = (product: OrderItem): void => {\n    setSelectedItem(product);\n\n    open('orderTableMore');\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      {isMobile ? (\n        <>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Product</TableCell>\n                <TableCell align=\"center\">\n                  <Typography>Total</Typography>\n                </TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.values(order).map(item => (\n                <TableRow key={item._id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Typography>{item.name}</Typography>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Typography>\n                      ${item.price} x {item.quantity} = ${item.total}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <IconButton\n                      aria-label=\"more\"\n                      onClick={() => handleOpenOrderTableMoreDialog(item)}\n                    >\n                      <MoreVertIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <OrderTableMoreDialog product={selectedItem} />\n        </>\n      ) : (\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Product</TableCell>\n              <TableCell align=\"center\"><Typography noWrap>Price ($)</Typography></TableCell>\n              <TableCell align=\"center\">Quantity</TableCell>\n              <TableCell align=\"center\"><Typography noWrap>Total ($)</Typography></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.values(order).map(item => (\n              <TableRow key={item._id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <IconButton onClick={() => removeItem(item._id)} aria-label=\"remove\">\n                      <DeleteIcon fontSize=\"large\" />\n                    </IconButton>\n                    <Box ml={0.5}>\n                      {item.name}\n                    </Box>\n                  </Box>\n                </TableCell>\n                <TableCell align=\"center\">{item.price}</TableCell>\n                <TableCell align=\"center\">\n                  <QuantityRow productId={item._id} />\n                </TableCell>\n                <TableCell align=\"center\">{item.total}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </TableContainer>\n  )\n};\n\nexport default OrderTable;","import React, { useContext } from 'react';\nimport {\n  Typography,\n  Box,\n  Container,\n  Button,\n} from '@material-ui/core';\nimport PaymentButtons from './components/paymentButtons';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { OrderContext } from '../../context/order';\nimport { Link } from 'react-router-dom';\nimport LogoutButton from '../../components/logoutButton';\nimport { Alert } from '@material-ui/lab';\nimport OrderTable from './components/orderTable';\n\nconst Card: React.FC = () => {\n  const { getTotal } = useContext(OrderContext);\n  \n  return (\n    <Container>\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\" component=\"h5\">\n          Cart \n        </Typography>\n        <LogoutButton />\n      </Box>\n      <Box mb={3}>\n        <Link to=\"/\">\n          <Button type=\"button\" variant=\"contained\" size=\"medium\">\n            <Box mr={0.5} display=\"flex\" alignItems=\"center\">\n              <ArrowBackIcon />\n            </Box>\n            Return to list\n          </Button>\n        </Link>\n      </Box>\n      {getTotal() > 0 ? (\n        <>\n          <OrderTable />\n          <Box my={2} textAlign=\"right\">\n            <Typography variant=\"h5\" component=\"h5\">\n              Total: ${getTotal()}\n            </Typography>\n          </Box>\n          <PaymentButtons />\n        </>\n      ) : (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <Alert severity=\"warning\">Empty card</Alert>\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default Card;","import React, { useContext } from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\nimport { AuthContext } from '../context/auth';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { data } = useContext(AuthContext);\n  \n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === Boolean(data.user) ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/login' : '/',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport Login from '../pages/login';\nimport ProductsList from '../pages/productsList';\nimport Cart from '../pages/cart';\nimport Route from './Route';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/login\" exact component={Login} />\n    <Route path=\"/\" exact component={ProductsList} isPrivate />\n    <Route path=\"/cart\" exact component={Cart} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { AuthProvider } from './context/auth';\nimport { OrderProvider } from './context/order';\nimport { ProductProvider } from './context/product';\nimport { DialogProvider } from './context/dialog';\nimport Routes from './routes';\nimport { BrowserRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport './style.css';\n\ntoast.configure({\n  position: 'top-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n});\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <AuthProvider>\n      <ProductProvider>\n        <OrderProvider>\n          <DialogProvider>\n            <StylesProvider injectFirst>\n              <Routes />\n            </StylesProvider>\n          </DialogProvider>\n        </OrderProvider>\n      </ProductProvider>\n    </AuthProvider>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}